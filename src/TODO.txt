// TODO List

// Over time, changes will happen—nothing stays the same, change will happen.

CLASSES: 

	Project/Assignment(Priority, time it'll take, due date, due time(optional?), etc), ... implements: Event
	Meeting/Appointment(When, start/end times), ..., implements: Event
	
	Event (Title: String, Location(Optional): String, repeat(Optional): Repeat, 
		   Notes(Optional): String, URL(Optional): String)
		   
	- Need to have Getters and Setters(to be able to edit if needed), so it wont be Immutable
	- 
	
		
		
		
		
		Repeat -> ENUM of repetition: ex: Every Day, Every Week, None,
				  Every 2 Weeks, Every MOnth, Every Year, Custom(ENUM of week: MON, TUE, ..., etc.)
		Notes -> will be a notes list of todos
		Priority -> ENUM of 1-10
		EstimatedTime -> Will be class of ...
		
	
	

	BlockOffDates: use ENUM and need to know times, use HASHMAP<Keys(dates of week) : Values(time blocked off)>
		Breakfast/Lunch/Dinner Time (BLOCK OFF TIMES/DATES -> sat/sun/etc (LIKE Custom from repeat -> Use same ENUM))
		
		
	+ ** NEED TO MAKE SURE TO LIMIT READ AND WRITE PERMS **
	Account -> which will determine which Calendar to be used.
		Account Data (Will read the account file)

	
	+ **WILL BE USING SQL, TO SHOW WORK, WILL START THIS PORTION AFTER BOOTCAMP**
		+ Parse Data -> need to finish the rest
		+ Save Data -> need to finish the rest
		
			
		+ Everything needs to be salted and hashed to ensure privacy
		+ Look Up how to make documents in Macs/Windows/etc to make private so it 
			can't be open unless program calls it
		
		+ Want to use SQL to save data and load data instead of writing it to a file.
			+ Will have to still have it salted and change how Account works.
		
		
Main BACKGROUND Class:

	Calendar 
		- HashMap<Date : ArrayList<Event>(Maybe not an ArrayList?)>
		- Bunch of getters and setters, and talk with Event Class
		- Need to also talk to BlockOffDates, Be an instance variable
		- Settings settings; -> instance VAR
		
		++ **FOR CALENDAR CLASS, NEED TO MAKE REPEATS WORK IN THE HASHMAP**
			- WHEN ADJUSTING REPEAT TO RECALCULATE AND DELETE PREV REPEATS
			- WHEN ADDING AN EVENT TO PUT THE REPEAT IN ITS PROPER PLACE IN HASHMAP
			- NEED TO CAP OFF HOW MANY DAYS IN ADAVANCE FOR REPEATS, (COULD BE INFINITE)
			- WORRY ABOUT LAST BEFORE SORTING AND ADJUSTING SCHEDULER
				- FIRST MAKE IT A CALENDAR THEN IT CAN BE A SCHEDULER
		
		
	Settings
		- be able to change theme colors
		- be able to edit block off dates -> // once updated will call Calendar class to change it (WONT NEED TO)
		- logout 
		
			
	+ Scheduler
		- will have the calendar, and all the Projects/Assignments
			- will the base it and find the best times to organize everything
		- will do all the calculations necessary to place all the assignments in it's correct spot
			- hence Scheduling everything.
		- will give blocked off dates/meetings right of way then the rest will be filled with Projects/assignments
		- this will be done through the priority, the due date, and the amount of time expected to take.
		
		
		
		
		
		
		
		
├── model/                 ← backend logic & data (Account, Event, EventManager)
│   ├── Account.java
│   ├── Event.java
│   └── EventManager.java
│
├── mvcmodel/              ← Model layer in MVC (Observable interfaces)
│   ├── UserModel.java
│   ├── EventModel.java
│   └── ReminderModel.java
│
├── view/                  ← GUI classes (views)
│   ├── LoginView.java
│   ├── CalendarView.java
│   └── SettingsView.java
│
├── controller/            ← Controllers (button logic, user actions)
│   ├── LoginController.java
│   ├── CalendarController.java
│   └── SettingsController.java
│
└── main/                  ← Entry point (Main.java, app setup)
    └── Main.java
	
		
		
	+ Need to make the calendar view, Forgot Password view, Sign up view
	+ Need to make buttons actually work
		- Start with login frame, will be the easiest to make
			- will have to align it with the Observer for it
		- Need to figure out how to do the BOD and the theme colors be editable
		- Need to Make the account text box be adjusted to the current account logged in.
			- Same with the Current Color.
	+ Need to make the picture smaller in the Main Menu view
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		